# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

cache:
  paths:
  - cargo

variables:
  RUST_BACKTRACE: "1"
  GIT_DEPTH: "3"
  CARGO_HOME: "$CI_PROJECT_DIR/cargo"
  MPLBACKEND: "Agg"
  LC_ALL: "C.UTF-8"
  LANG: "C.UTF-8"
  PYLIB_FORCE_DEBUG: "TRUE"

# Use cargo to test the project
test:cargo:
  before_script:
  - echo "deb http://ftp.de.debian.org/debian testing main" >> /etc/apt/sources.list
  - apt-get update
  - apt-get install -y protobuf-compiler xvfb
  - apt-get -t testing -y install python3.6 python3.6-dev python3-ipython python3-matplotlib python3-numpy python3-pip python3-pandas
  - update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
  - update-alternatives --set python3 `which python3.6`
  - python3 -m pip install pipenv
  - rustup update nightly
  - rustup default nightly

  # Install rust tools
  - which cargo-install-update || cargo install cargo-update
  - cargo install-update --allow-no-update sccache
  - export RUSTC_WRAPPER="sccache"
  - export SCCACHE_CACHE_SIZE="5G"
  - export SCCACHE_DIR="/sccache"
  # Update all tools
  - cargo +stable install-update -a
  script:
  - python3 --version
  - pipenv install --dev --verbose
  - pipenv run pip freeze
  - rustc --version && cargo --version      # Print version info for debugging
  # Remove debug build optimizations for third-party crates
  # They are usefull for local development, as this crates more optimized debug binaries
  # but makes CI very slow
  - sed -i '/profile.dev.overrides./,+1 d' Cargo.toml
  - sed -i '/profile.dev.build-override/,+1 d' Cargo.toml
  - cargo build --all --verbose
  - cargo test --all --verbose
  # start pipenv virtual environment
  - source $(pipenv --venv)/bin/activate
  # This rust program calls some python scripts
  - for f in ./test/data/*.json; do env RUST_BACKTRACE=1 RUST_LOG=encrypted_dns=trace cargo run --bin encrypted-dns -- "$f"; done
  - for f in ./test/data/*/*.json; do env RUST_BACKTRACE=1 RUST_LOG=encrypted_dns=trace cargo run --bin encrypted-dns -- "$f"; done
  # Test pylib build
  - pushd pylib && python3 ./setup.py install && popd
  - python3 -c "import pylib; help(pylib)"
