image: "projects.cispa.saarland:5005/bushart/docker/rust-ci:master"

cache:
  paths:
  - cargo

variables:
  CARGO_HOME: "$CI_PROJECT_DIR/cargo"
  GIT_DEPTH: "3"
  LANG: "C.UTF-8"
  LC_ALL: "C.UTF-8"
  MPLBACKEND: "Agg"
  PYLIB_FORCE_DEBUG: "TRUE"
  RUST_BACKTRACE: "1"
  SCCACHE_CACHE_SIZE: "5G"
  SCCACHE_DIR: "/sccache"

# Use cargo to test the project
test:cargo:
  before_script:
  # For some reason this cannot be in the variables section
  - export PATH="$CARGO_HOME/bin:$PATH"

  - python3 -m pip install pipenv

  # Install rust tools
  - which cargo-install-update || cargo install cargo-update
  # sccache is currently broken and has no new release
  #   https://github.com/mozilla/sccache/issues/876
  #   https://github.com/mozilla/sccache/issues/887
  # - cargo install-update --allow-no-update sccache
  - cargo install --git https://github.com/paritytech/sccache.git
  # This may only be set AFTER installing sccache
  - export RUSTC_WRAPPER="sccache"
  - export CC="sccache gcc"
  - export CXX="sccache g++"
  # Update all tools and install new ones
  - cargo install-update --all --git --allow-no-update cargo-cache cargo2junit

  script:
  # Print version info for debugging
  - python3 --version
  - rustc --version
  - cargo --version

  - pipenv sync --dev

  # Reduce the debug build optimizations for third-party crates and set them to 1
  # They are useful for local development, as this crates more optimized debug binaries
  # but makes CI very slow
  - sed -i 's/^opt-level\s*=\s*3$/opt-level = 1/' Cargo.toml

  - cargo build --all
  - cargo test --all
  - sccache --show-stats

  # start pipenv virtual environment
  - source $(pipenv --venv)/bin/activate
  # Test pylib build
  - pushd pylib && python3 ./setup.py install && popd
  - python3 -c "import pylib; help(pylib)"

  - sccache --show-stats
  after_script:
    # For some reason this cannot be in the variables section
    - export PATH="$CARGO_HOME/bin:$PATH"
    # Cleanup old leftover crate files, print before/after stats
    - cargo cache
    - cargo cache clean-unref
    - cargo cache

shellcheck:
  image: koalaman/shellcheck-alpine
  cache: {}
  script:
    - shellcheck --color=always $(find . -name \*.sh)
