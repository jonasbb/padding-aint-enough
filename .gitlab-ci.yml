image: "projects.cispa.saarland:5005/bushart/docker/rust-ci:master"

cache:
  paths:
  - cargo

variables:
  CARGO_HOME: "$CI_PROJECT_DIR/cargo"
  GIT_DEPTH: "3"
  LANG: "C.UTF-8"
  LC_ALL: "C.UTF-8"
  MPLBACKEND: "Agg"
  PATH: "$CI_PROJECT_DIR/cargo/bin:$PATH"
  PYLIB_FORCE_DEBUG: "TRUE"
  RUST_BACKTRACE: "1"
  SCCACHE_CACHE_SIZE: "5G"
  SCCACHE_DIR: "/sccache"

# Use cargo to test the project
test:cargo:
  before_script:
  - python3 -m pip install pipenv

  # Install rust tools
  - which cargo-install-update || cargo install cargo-update
  - cargo install-update --allow-no-update sccache
  # This may only be set AFTER installing sccache
  - export RUSTC_WRAPPER="sccache"
  # Update all tools
  - cargo install-update -a

  script:
  # Print version info for debugging
  - python3 --version
  - rustc --version
  - cargo --version

  - pipenv install --dev --verbose
  - pipenv run pip freeze

  # Remove debug build optimizations for third-party crates
  # They are usefull for local development, as this crates more optimized debug binaries
  # but makes CI very slow
  - sed -i '/profile.dev.overrides./,+1 d' Cargo.toml
  - sed -i '/profile.dev.build-override/,+1 d' Cargo.toml

  - cargo build --all
  - cargo test --all
  - sccache --show-stats

  # start pipenv virtual environment
  - source $(pipenv --venv)/bin/activate
  # Test pylib build
  - pushd pylib && python3 ./setup.py install && popd
  - python3 -c "import pylib; help(pylib)"

  - sccache --show-stats
